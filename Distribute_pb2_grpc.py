# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Distribute_pb2 as Distribute__pb2


class Lock_ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_lock = channel.unary_unary(
                '/Distribute.Lock_Server/get_lock',
                request_serializer=Distribute__pb2.lock_Request.SerializeToString,
                response_deserializer=Distribute__pb2.lock_reply.FromString,
                )
        self.get_unlock = channel.unary_unary(
                '/Distribute.Lock_Server/get_unlock',
                request_serializer=Distribute__pb2.lock_Request.SerializeToString,
                response_deserializer=Distribute__pb2.lock_reply.FromString,
                )


class Lock_ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get_lock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_unlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Lock_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_lock': grpc.unary_unary_rpc_method_handler(
                    servicer.get_lock,
                    request_deserializer=Distribute__pb2.lock_Request.FromString,
                    response_serializer=Distribute__pb2.lock_reply.SerializeToString,
            ),
            'get_unlock': grpc.unary_unary_rpc_method_handler(
                    servicer.get_unlock,
                    request_deserializer=Distribute__pb2.lock_Request.FromString,
                    response_serializer=Distribute__pb2.lock_reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Distribute.Lock_Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Lock_Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get_lock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Lock_Server/get_lock',
            Distribute__pb2.lock_Request.SerializeToString,
            Distribute__pb2.lock_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_unlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Lock_Server/get_unlock',
            Distribute__pb2.lock_Request.SerializeToString,
            Distribute__pb2.lock_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class Direct_ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.send_bare_info = channel.unary_unary(
                '/Distribute.Direct_Server/send_bare_info',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )
        self.get_server = channel.unary_unary(
                '/Distribute.Direct_Server/get_server',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )
        self.get_slaves = channel.unary_unary(
                '/Distribute.Direct_Server/get_slaves',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )
        self.paxos_update_response_status = channel.unary_unary(
                '/Distribute.Direct_Server/paxos_update_response_status',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )
        self.paxos_send_alldata_to_all_slaves = channel.unary_unary(
                '/Distribute.Direct_Server/paxos_send_alldata_to_all_slaves',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )
        self.slave_fileserver_access_update = channel.unary_unary(
                '/Distribute.Direct_Server/slave_fileserver_access_update',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )
        self.get_server_part2 = channel.unary_unary(
                '/Distribute.Direct_Server/get_server_part2',
                request_serializer=Distribute__pb2.dir_request.SerializeToString,
                response_deserializer=Distribute__pb2.dir_reply.FromString,
                )


class Direct_ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def send_bare_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_server(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_slaves(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def paxos_update_response_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def paxos_send_alldata_to_all_slaves(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def slave_fileserver_access_update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_server_part2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Direct_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'send_bare_info': grpc.unary_unary_rpc_method_handler(
                    servicer.send_bare_info,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
            'get_server': grpc.unary_unary_rpc_method_handler(
                    servicer.get_server,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
            'get_slaves': grpc.unary_unary_rpc_method_handler(
                    servicer.get_slaves,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
            'paxos_update_response_status': grpc.unary_unary_rpc_method_handler(
                    servicer.paxos_update_response_status,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
            'paxos_send_alldata_to_all_slaves': grpc.unary_unary_rpc_method_handler(
                    servicer.paxos_send_alldata_to_all_slaves,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
            'slave_fileserver_access_update': grpc.unary_unary_rpc_method_handler(
                    servicer.slave_fileserver_access_update,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
            'get_server_part2': grpc.unary_unary_rpc_method_handler(
                    servicer.get_server_part2,
                    request_deserializer=Distribute__pb2.dir_request.FromString,
                    response_serializer=Distribute__pb2.dir_reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Distribute.Direct_Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Direct_Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def send_bare_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/send_bare_info',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_server(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/get_server',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_slaves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/get_slaves',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def paxos_update_response_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/paxos_update_response_status',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def paxos_send_alldata_to_all_slaves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/paxos_send_alldata_to_all_slaves',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def slave_fileserver_access_update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/slave_fileserver_access_update',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_server_part2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.Direct_Server/get_server_part2',
            Distribute__pb2.dir_request.SerializeToString,
            Distribute__pb2.dir_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class File_ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.send_bare_info = channel.unary_unary(
                '/Distribute.File_Server/send_bare_info',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.upload_file = channel.unary_unary(
                '/Distribute.File_Server/upload_file',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.download_file = channel.unary_unary(
                '/Distribute.File_Server/download_file',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.update_file = channel.unary_unary(
                '/Distribute.File_Server/update_file',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.paxos_prepare_response = channel.unary_unary(
                '/Distribute.File_Server/paxos_prepare_response',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.paxos_accept_response = channel.unary_unary(
                '/Distribute.File_Server/paxos_accept_response',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.paxos_send_acceptV = channel.unary_unary(
                '/Distribute.File_Server/paxos_send_acceptV',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.update_all = channel.unary_unary(
                '/Distribute.File_Server/update_all',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.send_access_info = channel.unary_unary(
                '/Distribute.File_Server/send_access_info',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.create_file = channel.unary_unary(
                '/Distribute.File_Server/create_file',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )
        self.delete_file = channel.unary_unary(
                '/Distribute.File_Server/delete_file',
                request_serializer=Distribute__pb2.file_request.SerializeToString,
                response_deserializer=Distribute__pb2.file_reply.FromString,
                )


class File_ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def send_bare_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upload_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def download_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def paxos_prepare_response(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def paxos_accept_response(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def paxos_send_acceptV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_all(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_access_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_File_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'send_bare_info': grpc.unary_unary_rpc_method_handler(
                    servicer.send_bare_info,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'upload_file': grpc.unary_unary_rpc_method_handler(
                    servicer.upload_file,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'download_file': grpc.unary_unary_rpc_method_handler(
                    servicer.download_file,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'update_file': grpc.unary_unary_rpc_method_handler(
                    servicer.update_file,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'paxos_prepare_response': grpc.unary_unary_rpc_method_handler(
                    servicer.paxos_prepare_response,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'paxos_accept_response': grpc.unary_unary_rpc_method_handler(
                    servicer.paxos_accept_response,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'paxos_send_acceptV': grpc.unary_unary_rpc_method_handler(
                    servicer.paxos_send_acceptV,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'update_all': grpc.unary_unary_rpc_method_handler(
                    servicer.update_all,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'send_access_info': grpc.unary_unary_rpc_method_handler(
                    servicer.send_access_info,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'create_file': grpc.unary_unary_rpc_method_handler(
                    servicer.create_file,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
            'delete_file': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_file,
                    request_deserializer=Distribute__pb2.file_request.FromString,
                    response_serializer=Distribute__pb2.file_reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Distribute.File_Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class File_Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def send_bare_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/send_bare_info',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def upload_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/upload_file',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def download_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/download_file',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/update_file',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def paxos_prepare_response(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/paxos_prepare_response',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def paxos_accept_response(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/paxos_accept_response',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def paxos_send_acceptV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/paxos_send_acceptV',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_all(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/update_all',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_access_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/send_access_info',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/create_file',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_file(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Distribute.File_Server/delete_file',
            Distribute__pb2.file_request.SerializeToString,
            Distribute__pb2.file_reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
